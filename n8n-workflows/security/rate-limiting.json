{
    "name": "Rate Limiting",
    "nodes": [
      {
        "parameters": {
          "httpMethod": "GET",
          "path": "/api/rate-limiter",
          "options": {}
        },
        "name": "Webhook",
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 1,
        "position": [
          250,
          300
        ],
        "webhookId": "rate-limiter-webhook"
      },
      {
        "parameters": {
          "jsCode": "// Extract client info\nconst request = $input.first().json;\nconst ip = request.headers['x-forwarded-for'] || request.ip || 'unknown';\nconst userAgent = request.headers['user-agent'] || 'unknown';\nconst path = request.path || request.url || 'unknown';\nconst method = request.method || 'GET';\nconst clientId = request.headers['x-client-id'] || 'anonymous';\nconst token = request.headers['authorization'] || '';\n\nconst requestKey = `${ip}:${path}:${method}`;\n\n// Create rate limit info\nreturn [\n  {\n    json: {\n      timestamp: new Date().toISOString(),\n      ip,\n      userAgent,\n      path,\n      method,\n      clientId,\n      hasAuthToken: !!token,\n      requestKey\n    }\n  }\n];"
        },
        "name": "Extract Client Info",
        "type": "n8n-nodes-base.code",
        "typeVersion": 1,
        "position": [
          450,
          300
        ]
      },
      {
        "parameters": {
          "method": "GET",
          "url": "=http://localhost:5678/api/rate-limiter/check?key={{ $json.requestKey }}",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpHeaderAuth",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          }
        },
      {
        "parameters": {
          "jsCode": "return [{ json: { status: 'blocked', code: 429, message: 'Too many requests. Please wait before retrying.' } }];"
        },
        "name": "Too Many Requests",
        "type": "n8n-nodes-base.code",
        "typeVersion": 1,
        "position": [1000, 400]
      },
      {
        "parameters": {
          "method": "POST",
          "url": "http://logger-service:8000/api/log",
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n  \"level\": \"warning\",\n  \"message\": \"Blocked request from {{ $json.identifier }}\",\n  \"data\": $json\n}"
        },
        "name": "Log Blocked Request",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 3,
        "position": [1200, 400]
      }
    ],
  "Extract Client Info": {
      "main": [
        [
          {
            "node": "Check Rate Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Rate Limit": {
      "main": [
        [
          {
            "node": "Is Allowed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Allowed": {
      "main": [
        [
          {
            "node": "Increment Counter",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Rate Limit Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Increment Counter": {
      "main": [
        [
          {
            "node": "Allow Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Rate Limit Error": {
      "main": [
        [
          {
            "node": "Rate Limit Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rate Limit Response": {
      "main": [
        [
          {
            "node": "Log Rate Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "saveExecutionProgress": true,
    "callerPolicy": "workflowsFromAnyOwner",
    "errorWorkflow": "error-handling"
  },
  "tags": [
    {
      "name": "security"
    },
    {
      "name": "rate-limiting"
    }
  ],
  "versionId": "1",
  "id": "rate-limiting",
  "meta": {
    "instanceId": "local-instance"
  }
} 
  