{
    "name": "Advanced Rate Limit Handler",
    "nodes": [
      {
        "parameters": {
          "httpMethod": "POST",
          "path": "/api/limit/check"
        },
        "name": "Rate Limit Webhook",
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 1,
        "position": [200, 300]
      },
      {
        "parameters": {
          "jsCode": "// Tạo fingerprint đơn giản\nconst headers = $json.headers || {};\nconst ip = headers['x-forwarded-for'] || $json.ip || 'unknown';\nconst clientId = headers['x-client-id'] || 'guest';\nconst identifier = `${clientId}_${ip}`;\n\nreturn [{ json: { identifier, timestamp: Date.now(), ...$json } }];"
        },
        "name": "Build Identifier",
        "type": "n8n-nodes-base.code",
        "typeVersion": 1,
        "position": [400, 300]
      },
      {
        "parameters": {
          "method": "POST",
          "url": "http://redis-cache:8000/api/limit/check",
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={ \"id\": \"{{ $json.identifier }}\" }"
        },
        "name": "Redis Check",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 3,
        "position": [600, 300]
      },
      {
        "parameters": {
          "conditions": {
            "boolean": [
              {
                "value1": "={{ $json.allow === true }}",
                "value2": true
              }
            ]
          }
        },
        "name": "Check Allowed",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [800, 300]
      },
      {
        "parameters": {
          "method": "POST",
          "url": "http://redis-cache:8000/api/limit/increment",
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={ \"id\": \"{{ $json.identifier }}\" }"
        },
        "name": "Increment Usage",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 3,
        "position": [1000, 200]
      },
      {
        "parameters": {
          "jsCode": "return [{ json: { status: 'allowed', code: 200, message: 'Request accepted.' } }];"
        },
        "name": "Success Response",
        "type": "n8n-nodes-base.code",
        "typeVersion": 1,
        "position": [1200, 200]
      },
      {
        "parameters": {
          "jsCode": "return [{ json: { status: 'blocked', code: 429, message: 'Too many requests. Please wait before retrying.' } }];"
        },
        "name": "Too Many Requests",
        "type": "n8n-nodes-base.code",
        "typeVersion": 1,
        "position": [1000, 400]
      },
      {
        "parameters": {
          "method": "POST",
          "url": "http://logger-service:8000/api/log",
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n  \"level\": \"warning\",\n  \"message\": \"Blocked request from {{ $json.identifier }}\",\n  \"data\": $json\n}"
        },
        "name": "Log Blocked Request",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 3,
        "position": [1200, 400]
      }
    ],
  "Extract Client Info": {
      "main": [
        [
          {
            "node": "Check Rate Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Rate Limit": {
      "main": [
        [
          {
            "node": "Is Allowed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Allowed": {
      "main": [
        [
          {
            "node": "Increment Counter",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Rate Limit Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Increment Counter": {
      "main": [
        [
          {
            "node": "Allow Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Rate Limit Error": {
      "main": [
        [
          {
            "node": "Rate Limit Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rate Limit Response": {
      "main": [
        [
          {
            "node": "Log Rate Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "saveExecutionProgress": true,
    "callerPolicy": "workflowsFromAnyOwner",
    "errorWorkflow": "error-handling"
  },
  "tags": [
    {
      "name": "security"
    },
    {
      "name": "rate-limiting"
    }
  ],
  "versionId": "1",
  "id": "rate-limiting",
  "meta": {
    "instanceId": "local-instance"
  }
} 
  